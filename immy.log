07/18/25 2:03:01pm CDT - Enqueueing DESKTOP-A4GQRGB for identification
07/18/25 2:03:01pm CDT - This agent is reporting it comes from a trusted manufacturer.  Checking for an existing computer matching the manufacturer and serial number. https://docs.immy.bot/FAQ.html#what-are-trusted-manufacturers
07/18/25 2:03:01pm CDT - The manufacturer is Dell Inc. and the serial number is 2wtn512.
07/18/25 2:03:01pm CDT - An existing computer matching the manufacturer and serial number was not found.  Continuing identification.
07/18/25 2:03:01pm CDT - Executing identification script against DESKTOP-A4GQRGB
07/18/25 2:03:01pm CDT - Acquired global lock for Ephemeral session.
07/18/25 2:03:03pm CDT - Device id script response had errors: '[{"Exception":{"SerializedRemoteException":{"ErrorInformation":null,"ErrorCode":"Failed","Message":"Invalid class \"Win32_ComputerSystem\"","Data":{},"InnerException":null,"TargetSite":null,"StackTrace":null,"HelpLink":null,"Source":null,"HResult":-2146233087},"SerializedRemoteInvocationInfo":{"MyCommand":{"Namespace":"Microsoft.PowerShell.Management","HelpUri":"https://go.microsoft.com/fwlink/?LinkID=113337","DLL":"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\Microsoft.PowerShell.Commands.Management\\v4.0_3.0.0.0__31bf3856ad364e35\\Microsoft.PowerShell.Commands.Management.dll","Verb":"Get","Noun":"WmiObject","HelpFile":"Microsoft.PowerShell.Commands.Management.dll-Help.xml","PSSnapIn":"Microsoft.PowerShell.Management","Version":{"Major":3,"Minor":0,"Build":0,"Revision":0,"MajorRevision":0,"MinorRevision":0},"ImplementingType":"Microsoft.PowerShell.Commands.GetWmiObjectCommand","Definition":"\r\nGet-WmiObject [-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject -Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n","DefaultParameterSet":"query","OutputType":[],"Options":"ReadOnly","Name":"Get-WmiObject","CommandType":"Cmdlet","Source":"Microsoft.PowerShell.Management","Visibility":"Public","ModuleName":"Microsoft.PowerShell.Management","Module":null,"RemotingCapability":"OwnedByCommand","Parameters":{"Query":"System.Management.Automation.ParameterMetadata","Locale":"System.Management.Automation.ParameterMetadata","ErrorAction":"System.Management.Automation.ParameterMetadata","Impersonation":"System.Management.Automation.ParameterMetadata","EnableAllPrivileges":"System.Management.Automation.ParameterMetadata","AsJob":"System.Management.Automation.ParameterMetadata","Debug":"System.Management.Automation.ParameterMetadata","Verbose":"System.Management.Automation.ParameterMetadata","WarningAction":"System.Management.Automation.ParameterMetadata","Class":"System.Management.Automation.ParameterMetadata","OutVariable":"System.Management.Automation.ParameterMetadata","List":"System.Management.Automation.ParameterMetadata","WarningVariable":"System.Management.Automation.ParameterMetadata","Credential":"System.Management.Automation.ParameterMetadata","InformationVariable":"System.Management.Automation.ParameterMetadata","ErrorVariable":"System.Management.Automation.ParameterMetadata","Authentication":"System.Management.Automation.ParameterMetadata","Recurse":"System.Management.Automation.ParameterMetadata","Amended":"System.Management.Automation.ParameterMetadata","Filter":"System.Management.Automation.ParameterMetadata","OutBuffer":"System.Management.Automation.ParameterMetadata","DirectRead":"System.Management.Automation.ParameterMetadata","Authority":"System.Management.Automation.ParameterMetadata","PipelineVariable":"System.Management.Automation.ParameterMetadata","ThrottleLimit":"System.Management.Automation.ParameterMetadata","ComputerName":"System.Management.Automation.ParameterMetadata","InformationAction":"System.Management.Automation.ParameterMetadata","Namespace":"System.Management.Automation.ParameterMetadata","Property":"System.Management.Automation.ParameterMetadata"},"ParameterSets":["[-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","[[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","-Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","[-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","[-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]"]},"BoundParameters":{},"UnboundArguments":[],"ScriptLineNumber":1,"OffsetInLine":493,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:493\r\n+ ... me gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;functio ...\r\n+                                         ~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":null,"InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":{"value":1,"Value":null},"DisplayScriptPosition":null},"ErrorRecord":{"Exception":{"SerializedRemoteException":{"ErrorInformation":null,"ErrorCode":"Failed","Message":"Invalid class \"Win32_ComputerSystem\"","Data":"System.Collections.Hashtable","InnerException":null,"TargetSite":null,"StackTrace":null,"HelpLink":null,"Source":null,"HResult":-2146233087},"SerializedRemoteInvocationInfo":{"MyCommand":"Get-WmiObject","BoundParameters":"System.Collections.Hashtable","UnboundArguments":"","ScriptLineNumber":1,"OffsetInLine":493,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:493\r\n+ ... me gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;functio ...\r\n+                                         ~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":null,"InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":{"value":1,"Value":null},"DisplayScriptPosition":null},"ErrorRecord":{"Exception":"System.Management.Automation.RemoteException: Invalid class \"Win32_ComputerSystem\"","TargetObject":null,"CategoryInfo":"InvalidType: (:) [Get-WmiObject], ManagementException","FullyQualifiedErrorId":"GetWMIManagementException,Microsoft.PowerShell.Commands.GetWmiObjectCommand","ErrorDetails":null,"InvocationInfo":"System.Management.Automation.InvocationInfo","ScriptStackTrace":"at <ScriptBlock>, <No file>: line 1","PipelineIterationInfo":"0 0"},"WasThrownFromThrowStatement":false,"TargetSite":null,"Message":"Invalid class \"Win32_ComputerSystem\"","Data":{},"InnerException":null,"HelpLink":null,"Source":null,"HResult":-2146233087,"StackTrace":null},"TargetObject":null,"CategoryInfo":{"Category":9,"Activity":"Get-WmiObject","Reason":"ManagementException","TargetName":"","TargetType":""},"FullyQualifiedErrorId":"GetWMIManagementException,Microsoft.PowerShell.Commands.GetWmiObjectCommand","ErrorDetails":null,"InvocationInfo":{"MyCommand":{"Definition":"\r\nGet-WmiObject [-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject -Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n","OutputType":null,"Name":"Get-WmiObject","CommandType":8,"Source":"","Version":null,"Visibility":0,"ModuleName":"","Module":null,"RemotingCapability":1,"Parameters":null,"ParameterSets":null},"BoundParameters":{},"UnboundArguments":[],"ScriptLineNumber":1,"OffsetInLine":493,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","Statement":"gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:493\n+ … stance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (I …\n+               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":"","InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":1,"DisplayScriptPosition":null},"ScriptStackTrace":"at <ScriptBlock>, <No file>: line 1","PipelineIterationInfo":[0,0]},"WasThrownFromThrowStatement":false,"TargetSite":null,"Message":"Invalid class \"Win32_ComputerSystem\"","Data":{},"InnerException":null,"HelpLink":null,"Source":null,"HResult":-2146233087,"StackTrace":null},"TargetObject":null,"CategoryInfo":{"Category":9,"Activity":"Get-WmiObject","Reason":"ManagementException","TargetName":"","TargetType":""},"FullyQualifiedErrorId":"GetWMIManagementException,Microsoft.PowerShell.Commands.GetWmiObjectCommand","ErrorDetails":null,"InvocationInfo":{"MyCommand":{"Definition":"\r\nGet-WmiObject [-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject -Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n","OutputType":null,"Name":"Get-WmiObject","CommandType":8,"Source":"","Version":null,"Visibility":0,"ModuleName":"","Module":null,"RemotingCapability":1,"Parameters":null,"ParameterSets":null},"BoundParameters":{},"UnboundArguments":[],"ScriptLineNumber":1,"OffsetInLine":493,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","Statement":"gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:493\n+ … stance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (I …\n+               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":"","InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":1,"DisplayScriptPosition":null},"ScriptStackTrace":"at <ScriptBlock>, <No file>: line 1","PipelineIterationInfo":[0,0]},{"Exception":{"SerializedRemoteException":{"ErrorInformation":null,"ErrorCode":"Failed","Message":"Invalid class \"Win32_OperatingSystem\"","Data":{},"InnerException":null,"TargetSite":null,"StackTrace":null,"HelpLink":null,"Source":null,"HResult":-2146233087},"SerializedRemoteInvocationInfo":{"MyCommand":{"Namespace":"Microsoft.PowerShell.Management","HelpUri":"https://go.microsoft.com/fwlink/?LinkID=113337","DLL":"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\Microsoft.PowerShell.Commands.Management\\v4.0_3.0.0.0__31bf3856ad364e35\\Microsoft.PowerShell.Commands.Management.dll","Verb":"Get","Noun":"WmiObject","HelpFile":"Microsoft.PowerShell.Commands.Management.dll-Help.xml","PSSnapIn":"Microsoft.PowerShell.Management","Version":{"Major":3,"Minor":0,"Build":0,"Revision":0,"MajorRevision":0,"MinorRevision":0},"ImplementingType":"Microsoft.PowerShell.Commands.GetWmiObjectCommand","Definition":"\r\nGet-WmiObject [-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject -Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n","DefaultParameterSet":"query","OutputType":[],"Options":"ReadOnly","Name":"Get-WmiObject","CommandType":"Cmdlet","Source":"Microsoft.PowerShell.Management","Visibility":"Public","ModuleName":"Microsoft.PowerShell.Management","Module":null,"RemotingCapability":"OwnedByCommand","Parameters":{"Query":"System.Management.Automation.ParameterMetadata","Locale":"System.Management.Automation.ParameterMetadata","ErrorAction":"System.Management.Automation.ParameterMetadata","Impersonation":"System.Management.Automation.ParameterMetadata","EnableAllPrivileges":"System.Management.Automation.ParameterMetadata","AsJob":"System.Management.Automation.ParameterMetadata","Debug":"System.Management.Automation.ParameterMetadata","Verbose":"System.Management.Automation.ParameterMetadata","WarningAction":"System.Management.Automation.ParameterMetadata","Class":"System.Management.Automation.ParameterMetadata","OutVariable":"System.Management.Automation.ParameterMetadata","List":"System.Management.Automation.ParameterMetadata","WarningVariable":"System.Management.Automation.ParameterMetadata","Credential":"System.Management.Automation.ParameterMetadata","InformationVariable":"System.Management.Automation.ParameterMetadata","ErrorVariable":"System.Management.Automation.ParameterMetadata","Authentication":"System.Management.Automation.ParameterMetadata","Recurse":"System.Management.Automation.ParameterMetadata","Amended":"System.Management.Automation.ParameterMetadata","Filter":"System.Management.Automation.ParameterMetadata","OutBuffer":"System.Management.Automation.ParameterMetadata","DirectRead":"System.Management.Automation.ParameterMetadata","Authority":"System.Management.Automation.ParameterMetadata","PipelineVariable":"System.Management.Automation.ParameterMetadata","ThrottleLimit":"System.Management.Automation.ParameterMetadata","ComputerName":"System.Management.Automation.ParameterMetadata","InformationAction":"System.Management.Automation.ParameterMetadata","Namespace":"System.Management.Automation.ParameterMetadata","Property":"System.Management.Automation.ParameterMetadata"},"ParameterSets":["[-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","[[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","-Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","[-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","[-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]"]},"BoundParameters":{},"UnboundArguments":[],"ScriptLineNumber":1,"OffsetInLine":1121,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:1121\r\n+ ... try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate ...\r\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":null,"InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":{"value":1,"Value":null},"DisplayScriptPosition":null},"ErrorRecord":{"Exception":{"SerializedRemoteException":{"ErrorInformation":null,"ErrorCode":"Failed","Message":"Invalid class \"Win32_OperatingSystem\"","Data":"System.Collections.Hashtable","InnerException":null,"TargetSite":null,"StackTrace":null,"HelpLink":null,"Source":null,"HResult":-2146233087},"SerializedRemoteInvocationInfo":{"MyCommand":"Get-WmiObject","BoundParameters":"System.Collections.Hashtable","UnboundArguments":"","ScriptLineNumber":1,"OffsetInLine":1121,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:1121\r\n+ ... try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate ...\r\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":null,"InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":{"value":1,"Value":null},"DisplayScriptPosition":null},"ErrorRecord":{"Exception":"System.Management.Automation.RemoteException: Invalid class \"Win32_OperatingSystem\"","TargetObject":null,"CategoryInfo":"InvalidType: (:) [Get-WmiObject], ManagementException","FullyQualifiedErrorId":"GetWMIManagementException,Microsoft.PowerShell.Commands.GetWmiObjectCommand","ErrorDetails":null,"InvocationInfo":"System.Management.Automation.InvocationInfo","ScriptStackTrace":"at <ScriptBlock>, <No file>: line 1","PipelineIterationInfo":"0 0"},"WasThrownFromThrowStatement":false,"TargetSite":null,"Message":"Invalid class \"Win32_OperatingSystem\"","Data":{},"InnerException":null,"HelpLink":null,"Source":null,"HResult":-2146233087,"StackTrace":null},"TargetObject":null,"CategoryInfo":{"Category":9,"Activity":"Get-WmiObject","Reason":"ManagementException","TargetName":"","TargetType":""},"FullyQualifiedErrorId":"GetWMIManagementException,Microsoft.PowerShell.Commands.GetWmiObjectCommand","ErrorDetails":null,"InvocationInfo":{"MyCommand":{"Definition":"\r\nGet-WmiObject [-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject -Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n","OutputType":null,"Name":"Get-WmiObject","CommandType":8,"Source":"","Version":null,"Visibility":0,"ModuleName":"","Module":null,"RemotingCapability":1,"Parameters":null,"ParameterSets":null},"BoundParameters":{},"UnboundArguments":[],"ScriptLineNumber":1,"OffsetInLine":1121,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","Statement":"gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:1121\n+ … try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate …\n+               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":"","InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":1,"DisplayScriptPosition":null},"ScriptStackTrace":"at <ScriptBlock>, <No file>: line 1","PipelineIterationInfo":[0,0]},"WasThrownFromThrowStatement":false,"TargetSite":null,"Message":"Invalid class \"Win32_OperatingSystem\"","Data":{},"InnerException":null,"HelpLink":null,"Source":null,"HResult":-2146233087,"StackTrace":null},"TargetObject":null,"CategoryInfo":{"Category":9,"Activity":"Get-WmiObject","Reason":"ManagementException","TargetName":"","TargetType":""},"FullyQualifiedErrorId":"GetWMIManagementException,Microsoft.PowerShell.Commands.GetWmiObjectCommand","ErrorDetails":null,"InvocationInfo":{"MyCommand":{"Definition":"\r\nGet-WmiObject [-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject -Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n","OutputType":null,"Name":"Get-WmiObject","CommandType":8,"Source":"","Version":null,"Visibility":0,"ModuleName":"","Module":null,"RemotingCapability":1,"Parameters":null,"ParameterSets":null},"BoundParameters":{},"UnboundArguments":[],"ScriptLineNumber":1,"OffsetInLine":1121,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","Statement":"gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:1121\n+ … try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate …\n+               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":"","InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":1,"DisplayScriptPosition":null},"ScriptStackTrace":"at <ScriptBlock>, <No file>: line 1","PipelineIterationInfo":[0,0]},{"Exception":{"SerializedRemoteException":{"ErrorInformation":null,"ErrorCode":"Failed","Message":"Invalid class \"Win32_SystemEnclosure\"","Data":{},"InnerException":null,"TargetSite":null,"StackTrace":null,"HelpLink":null,"Source":null,"HResult":-2146233087},"SerializedRemoteInvocationInfo":{"MyCommand":{"Namespace":"Microsoft.PowerShell.Management","HelpUri":"https://go.microsoft.com/fwlink/?LinkID=113337","DLL":"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\Microsoft.PowerShell.Commands.Management\\v4.0_3.0.0.0__31bf3856ad364e35\\Microsoft.PowerShell.Commands.Management.dll","Verb":"Get","Noun":"WmiObject","HelpFile":"Microsoft.PowerShell.Commands.Management.dll-Help.xml","PSSnapIn":"Microsoft.PowerShell.Management","Version":{"Major":3,"Minor":0,"Build":0,"Revision":0,"MajorRevision":0,"MinorRevision":0},"ImplementingType":"Microsoft.PowerShell.Commands.GetWmiObjectCommand","Definition":"\r\nGet-WmiObject [-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject -Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n","DefaultParameterSet":"query","OutputType":[],"Options":"ReadOnly","Name":"Get-WmiObject","CommandType":"Cmdlet","Source":"Microsoft.PowerShell.Management","Visibility":"Public","ModuleName":"Microsoft.PowerShell.Management","Module":null,"RemotingCapability":"OwnedByCommand","Parameters":{"Query":"System.Management.Automation.ParameterMetadata","Locale":"System.Management.Automation.ParameterMetadata","ErrorAction":"System.Management.Automation.ParameterMetadata","Impersonation":"System.Management.Automation.ParameterMetadata","EnableAllPrivileges":"System.Management.Automation.ParameterMetadata","AsJob":"System.Management.Automation.ParameterMetadata","Debug":"System.Management.Automation.ParameterMetadata","Verbose":"System.Management.Automation.ParameterMetadata","WarningAction":"System.Management.Automation.ParameterMetadata","Class":"System.Management.Automation.ParameterMetadata","OutVariable":"System.Management.Automation.ParameterMetadata","List":"System.Management.Automation.ParameterMetadata","WarningVariable":"System.Management.Automation.ParameterMetadata","Credential":"System.Management.Automation.ParameterMetadata","InformationVariable":"System.Management.Automation.ParameterMetadata","ErrorVariable":"System.Management.Automation.ParameterMetadata","Authentication":"System.Management.Automation.ParameterMetadata","Recurse":"System.Management.Automation.ParameterMetadata","Amended":"System.Management.Automation.ParameterMetadata","Filter":"System.Management.Automation.ParameterMetadata","OutBuffer":"System.Management.Automation.ParameterMetadata","DirectRead":"System.Management.Automation.ParameterMetadata","Authority":"System.Management.Automation.ParameterMetadata","PipelineVariable":"System.Management.Automation.ParameterMetadata","ThrottleLimit":"System.Management.Automation.ParameterMetadata","ComputerName":"System.Management.Automation.ParameterMetadata","InformationAction":"System.Management.Automation.ParameterMetadata","Namespace":"System.Management.Automation.ParameterMetadata","Property":"System.Management.Automation.ParameterMetadata"},"ParameterSets":["[-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","[[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","-Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","[-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","[-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]"]},"BoundParameters":{},"UnboundArguments":[],"ScriptLineNumber":1,"OffsetInLine":1212,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:1212\r\n+ ... assisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach ...\r\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":null,"InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":{"value":1,"Value":null},"DisplayScriptPosition":null},"ErrorRecord":{"Exception":{"SerializedRemoteException":{"ErrorInformation":null,"ErrorCode":"Failed","Message":"Invalid class \"Win32_SystemEnclosure\"","Data":"System.Collections.Hashtable","InnerException":null,"TargetSite":null,"StackTrace":null,"HelpLink":null,"Source":null,"HResult":-2146233087},"SerializedRemoteInvocationInfo":{"MyCommand":"Get-WmiObject","BoundParameters":"System.Collections.Hashtable","UnboundArguments":"","ScriptLineNumber":1,"OffsetInLine":1212,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:1212\r\n+ ... assisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach ...\r\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":null,"InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":{"value":1,"Value":null},"DisplayScriptPosition":null},"ErrorRecord":{"Exception":"System.Management.Automation.RemoteException: Invalid class \"Win32_SystemEnclosure\"","TargetObject":null,"CategoryInfo":"InvalidType: (:) [Get-WmiObject], ManagementException","FullyQualifiedErrorId":"GetWMIManagementException,Microsoft.PowerShell.Commands.GetWmiObjectCommand","ErrorDetails":null,"InvocationInfo":"System.Management.Automation.InvocationInfo","ScriptStackTrace":"at <ScriptBlock>, <No file>: line 1","PipelineIterationInfo":"0 0 0"},"WasThrownFromThrowStatement":false,"TargetSite":null,"Message":"Invalid class \"Win32_SystemEnclosure\"","Data":{},"InnerException":null,"HelpLink":null,"Source":null,"HResult":-2146233087,"StackTrace":null},"TargetObject":null,"CategoryInfo":{"Category":9,"Activity":"Get-WmiObject","Reason":"ManagementException","TargetName":"","TargetType":""},"FullyQualifiedErrorId":"GetWMIManagementException,Microsoft.PowerShell.Commands.GetWmiObjectCommand","ErrorDetails":null,"InvocationInfo":{"MyCommand":{"Definition":"\r\nGet-WmiObject [-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject -Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n","OutputType":null,"Name":"Get-WmiObject","CommandType":8,"Source":"","Version":null,"Visibility":0,"ModuleName":"","Module":null,"RemotingCapability":1,"Parameters":null,"ParameterSets":null},"BoundParameters":{},"UnboundArguments":[],"ScriptLineNumber":1,"OffsetInLine":1212,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","Statement":"gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:1212\n+ … assisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach …\n+               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":"","InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":1,"DisplayScriptPosition":null},"ScriptStackTrace":"at <ScriptBlock>, <No file>: line 1","PipelineIterationInfo":[0,0,0]},"WasThrownFromThrowStatement":false,"TargetSite":null,"Message":"Invalid class \"Win32_SystemEnclosure\"","Data":{},"InnerException":null,"HelpLink":null,"Source":null,"HResult":-2146233087,"StackTrace":null},"TargetObject":null,"CategoryInfo":{"Category":9,"Activity":"Get-WmiObject","Reason":"ManagementException","TargetName":"","TargetType":""},"FullyQualifiedErrorId":"GetWMIManagementException,Microsoft.PowerShell.Commands.GetWmiObjectCommand","ErrorDetails":null,"InvocationInfo":{"MyCommand":{"Definition":"\r\nGet-WmiObject [-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject -Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n","OutputType":null,"Name":"Get-WmiObject","CommandType":8,"Source":"","Version":null,"Visibility":0,"ModuleName":"","Module":null,"RemotingCapability":1,"Parameters":null,"ParameterSets":null},"BoundParameters":{},"UnboundArguments":[],"ScriptLineNumber":1,"OffsetInLine":1212,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","Statement":"gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:1212\n+ … assisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach …\n+               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":"","InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":1,"DisplayScriptPosition":null},"ScriptStackTrace":"at <ScriptBlock>, <No file>: line 1","PipelineIterationInfo":[0,0,0]},{"Exception":{"SerializedRemoteException":{"ErrorInformation":null,"ErrorCode":"Failed","Message":"Invalid class \"Win32_OperatingSystem\"","Data":{},"InnerException":null,"TargetSite":null,"StackTrace":null,"HelpLink":null,"Source":null,"HResult":-2146233087},"SerializedRemoteInvocationInfo":{"MyCommand":{"Namespace":"Microsoft.PowerShell.Management","HelpUri":"https://go.microsoft.com/fwlink/?LinkID=113337","DLL":"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\Microsoft.PowerShell.Commands.Management\\v4.0_3.0.0.0__31bf3856ad364e35\\Microsoft.PowerShell.Commands.Management.dll","Verb":"Get","Noun":"WmiObject","HelpFile":"Microsoft.PowerShell.Commands.Management.dll-Help.xml","PSSnapIn":"Microsoft.PowerShell.Management","Version":{"Major":3,"Minor":0,"Build":0,"Revision":0,"MajorRevision":0,"MinorRevision":0},"ImplementingType":"Microsoft.PowerShell.Commands.GetWmiObjectCommand","Definition":"\r\nGet-WmiObject [-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject -Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n","DefaultParameterSet":"query","OutputType":[],"Options":"ReadOnly","Name":"Get-WmiObject","CommandType":"Cmdlet","Source":"Microsoft.PowerShell.Management","Visibility":"Public","ModuleName":"Microsoft.PowerShell.Management","Module":null,"RemotingCapability":"OwnedByCommand","Parameters":{"Query":"System.Management.Automation.ParameterMetadata","Locale":"System.Management.Automation.ParameterMetadata","ErrorAction":"System.Management.Automation.ParameterMetadata","Impersonation":"System.Management.Automation.ParameterMetadata","EnableAllPrivileges":"System.Management.Automation.ParameterMetadata","AsJob":"System.Management.Automation.ParameterMetadata","Debug":"System.Management.Automation.ParameterMetadata","Verbose":"System.Management.Automation.ParameterMetadata","WarningAction":"System.Management.Automation.ParameterMetadata","Class":"System.Management.Automation.ParameterMetadata","OutVariable":"System.Management.Automation.ParameterMetadata","List":"System.Management.Automation.ParameterMetadata","WarningVariable":"System.Management.Automation.ParameterMetadata","Credential":"System.Management.Automation.ParameterMetadata","InformationVariable":"System.Management.Automation.ParameterMetadata","ErrorVariable":"System.Management.Automation.ParameterMetadata","Authentication":"System.Management.Automation.ParameterMetadata","Recurse":"System.Management.Automation.ParameterMetadata","Amended":"System.Management.Automation.ParameterMetadata","Filter":"System.Management.Automation.ParameterMetadata","OutBuffer":"System.Management.Automation.ParameterMetadata","DirectRead":"System.Management.Automation.ParameterMetadata","Authority":"System.Management.Automation.ParameterMetadata","PipelineVariable":"System.Management.Automation.ParameterMetadata","ThrottleLimit":"System.Management.Automation.ParameterMetadata","ComputerName":"System.Management.Automation.ParameterMetadata","InformationAction":"System.Management.Automation.ParameterMetadata","Namespace":"System.Management.Automation.ParameterMetadata","Property":"System.Management.Automation.ParameterMetadata"},"ParameterSets":["[-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","[[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","-Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","[-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","[-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]"]},"BoundParameters":{},"UnboundArguments":[],"ScriptLineNumber":1,"OffsetInLine":1362,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:1362\r\n+ ... lDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | selec ...\r\n+                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":null,"InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":1,"DisplayScriptPosition":null},"ErrorRecord":{"Exception":{"SerializedRemoteException":{"ErrorInformation":null,"ErrorCode":"Failed","Message":"Invalid class \"Win32_OperatingSystem\"","Data":"System.Collections.Hashtable","InnerException":null,"TargetSite":null,"StackTrace":null,"HelpLink":null,"Source":null,"HResult":-2146233087},"SerializedRemoteInvocationInfo":{"MyCommand":"Get-WmiObject","BoundParameters":"System.Collections.Hashtable","UnboundArguments":"","ScriptLineNumber":1,"OffsetInLine":1362,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:1362\r\n+ ... lDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | selec ...\r\n+                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":null,"InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":1,"DisplayScriptPosition":null},"ErrorRecord":{"Exception":"System.Management.Automation.RemoteException: Invalid class \"Win32_OperatingSystem\"","TargetObject":null,"CategoryInfo":"InvalidType: (:) [Get-WmiObject], ManagementException","FullyQualifiedErrorId":"GetWMIManagementException,Microsoft.PowerShell.Commands.GetWmiObjectCommand","ErrorDetails":null,"InvocationInfo":"System.Management.Automation.InvocationInfo","ScriptStackTrace":"at <ScriptBlock>, <No file>: line 1","PipelineIterationInfo":"0 0 0"},"WasThrownFromThrowStatement":false,"TargetSite":null,"Message":"Invalid class \"Win32_OperatingSystem\"","Data":{},"InnerException":null,"HelpLink":null,"Source":null,"HResult":-2146233087,"StackTrace":null},"TargetObject":null,"CategoryInfo":{"Category":9,"Activity":"Get-WmiObject","Reason":"ManagementException","TargetName":"","TargetType":""},"FullyQualifiedErrorId":"GetWMIManagementException,Microsoft.PowerShell.Commands.GetWmiObjectCommand","ErrorDetails":null,"InvocationInfo":{"MyCommand":{"Definition":"\r\nGet-WmiObject [-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject -Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n","OutputType":null,"Name":"Get-WmiObject","CommandType":8,"Source":"","Version":null,"Visibility":0,"ModuleName":"","Module":null,"RemotingCapability":1,"Parameters":null,"ParameterSets":null},"BoundParameters":{},"UnboundArguments":[],"ScriptLineNumber":1,"OffsetInLine":1362,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","Statement":"gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:1362\n+ … ToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallD …\n+               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":"","InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":1,"DisplayScriptPosition":null},"ScriptStackTrace":"at <ScriptBlock>, <No file>: line 1","PipelineIterationInfo":[0,0,0]},"WasThrownFromThrowStatement":false,"TargetSite":null,"Message":"Invalid class \"Win32_OperatingSystem\"","Data":{},"InnerException":null,"HelpLink":null,"Source":null,"HResult":-2146233087,"StackTrace":null},"TargetObject":null,"CategoryInfo":{"Category":9,"Activity":"Get-WmiObject","Reason":"ManagementException","TargetName":"","TargetType":""},"FullyQualifiedErrorId":"GetWMIManagementException,Microsoft.PowerShell.Commands.GetWmiObjectCommand","ErrorDetails":null,"InvocationInfo":{"MyCommand":{"Definition":"\r\nGet-WmiObject [-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject -Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n","OutputType":null,"Name":"Get-WmiObject","CommandType":8,"Source":"","Version":null,"Visibility":0,"ModuleName":"","Module":null,"RemotingCapability":1,"Parameters":null,"ParameterSets":null},"BoundParameters":{},"UnboundArguments":[],"ScriptLineNumber":1,"OffsetInLine":1362,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","Statement":"gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:1362\n+ … ToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallD …\n+               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":"","InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":1,"DisplayScriptPosition":null},"ScriptStackTrace":"at <ScriptBlock>, <No file>: line 1","PipelineIterationInfo":[0,0,0]}]'
07/18/25 2:03:03pm CDT - Failed to identify DESKTOP-A4GQRGB. Device id script response had errors: '[{"Exception":{"SerializedRemoteException":{"ErrorInformation":null,"ErrorCode":"Failed","Message":"Invalid class \"Win32_ComputerSystem\"","Data":{},"InnerException":null,"TargetSite":null,"StackTrace":null,"HelpLink":null,"Source":null,"HResult":-2146233087},"SerializedRemoteInvocationInfo":{"MyCommand":{"Namespace":"Microsoft.PowerShell.Management","HelpUri":"https://go.microsoft.com/fwlink/?LinkID=113337","DLL":"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\Microsoft.PowerShell.Commands.Management\\v4.0_3.0.0.0__31bf3856ad364e35\\Microsoft.PowerShell.Commands.Management.dll","Verb":"Get","Noun":"WmiObject","HelpFile":"Microsoft.PowerShell.Commands.Management.dll-Help.xml","PSSnapIn":"Microsoft.PowerShell.Management","Version":{"Major":3,"Minor":0,"Build":0,"Revision":0,"MajorRevision":0,"MinorRevision":0},"ImplementingType":"Microsoft.PowerShell.Commands.GetWmiObjectCommand","Definition":"\r\nGet-WmiObject [-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject -Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n","DefaultParameterSet":"query","OutputType":[],"Options":"ReadOnly","Name":"Get-WmiObject","CommandType":"Cmdlet","Source":"Microsoft.PowerShell.Management","Visibility":"Public","ModuleName":"Microsoft.PowerShell.Management","Module":null,"RemotingCapability":"OwnedByCommand","Parameters":{"Query":"System.Management.Automation.ParameterMetadata","Locale":"System.Management.Automation.ParameterMetadata","ErrorAction":"System.Management.Automation.ParameterMetadata","Impersonation":"System.Management.Automation.ParameterMetadata","EnableAllPrivileges":"System.Management.Automation.ParameterMetadata","AsJob":"System.Management.Automation.ParameterMetadata","Debug":"System.Management.Automation.ParameterMetadata","Verbose":"System.Management.Automation.ParameterMetadata","WarningAction":"System.Management.Automation.ParameterMetadata","Class":"System.Management.Automation.ParameterMetadata","OutVariable":"System.Management.Automation.ParameterMetadata","List":"System.Management.Automation.ParameterMetadata","WarningVariable":"System.Management.Automation.ParameterMetadata","Credential":"System.Management.Automation.ParameterMetadata","InformationVariable":"System.Management.Automation.ParameterMetadata","ErrorVariable":"System.Management.Automation.ParameterMetadata","Authentication":"System.Management.Automation.ParameterMetadata","Recurse":"System.Management.Automation.ParameterMetadata","Amended":"System.Management.Automation.ParameterMetadata","Filter":"System.Management.Automation.ParameterMetadata","OutBuffer":"System.Management.Automation.ParameterMetadata","DirectRead":"System.Management.Automation.ParameterMetadata","Authority":"System.Management.Automation.ParameterMetadata","PipelineVariable":"System.Management.Automation.ParameterMetadata","ThrottleLimit":"System.Management.Automation.ParameterMetadata","ComputerName":"System.Management.Automation.ParameterMetadata","InformationAction":"System.Management.Automation.ParameterMetadata","Namespace":"System.Management.Automation.ParameterMetadata","Property":"System.Management.Automation.ParameterMetadata"},"ParameterSets":["[-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","[[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","-Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","[-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","[-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]"]},"BoundParameters":{},"UnboundArguments":[],"ScriptLineNumber":1,"OffsetInLine":493,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:493\r\n+ ... me gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;functio ...\r\n+                                         ~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":null,"InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":{"value":1,"Value":null},"DisplayScriptPosition":null},"ErrorRecord":{"Exception":{"SerializedRemoteException":{"ErrorInformation":null,"ErrorCode":"Failed","Message":"Invalid class \"Win32_ComputerSystem\"","Data":"System.Collections.Hashtable","InnerException":null,"TargetSite":null,"StackTrace":null,"HelpLink":null,"Source":null,"HResult":-2146233087},"SerializedRemoteInvocationInfo":{"MyCommand":"Get-WmiObject","BoundParameters":"System.Collections.Hashtable","UnboundArguments":"","ScriptLineNumber":1,"OffsetInLine":493,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:493\r\n+ ... me gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;functio ...\r\n+                                         ~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":null,"InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":{"value":1,"Value":null},"DisplayScriptPosition":null},"ErrorRecord":{"Exception":"System.Management.Automation.RemoteException: Invalid class \"Win32_ComputerSystem\"","TargetObject":null,"CategoryInfo":"InvalidType: (:) [Get-WmiObject], ManagementException","FullyQualifiedErrorId":"GetWMIManagementException,Microsoft.PowerShell.Commands.GetWmiObjectCommand","ErrorDetails":null,"InvocationInfo":"System.Management.Automation.InvocationInfo","ScriptStackTrace":"at <ScriptBlock>, <No file>: line 1","PipelineIterationInfo":"0 0"},"WasThrownFromThrowStatement":false,"TargetSite":null,"Message":"Invalid class \"Win32_ComputerSystem\"","Data":{},"InnerException":null,"HelpLink":null,"Source":null,"HResult":-2146233087,"StackTrace":null},"TargetObject":null,"CategoryInfo":{"Category":9,"Activity":"Get-WmiObject","Reason":"ManagementException","TargetName":"","TargetType":""},"FullyQualifiedErrorId":"GetWMIManagementException,Microsoft.PowerShell.Commands.GetWmiObjectCommand","ErrorDetails":null,"InvocationInfo":{"MyCommand":{"Definition":"\r\nGet-WmiObject [-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject -Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n","OutputType":null,"Name":"Get-WmiObject","CommandType":8,"Source":"","Version":null,"Visibility":0,"ModuleName":"","Module":null,"RemotingCapability":1,"Parameters":null,"ParameterSets":null},"BoundParameters":{},"UnboundArguments":[],"ScriptLineNumber":1,"OffsetInLine":493,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","Statement":"gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:493\n+ … stance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (I …\n+               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":"","InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":1,"DisplayScriptPosition":null},"ScriptStackTrace":"at <ScriptBlock>, <No file>: line 1","PipelineIterationInfo":[0,0]},"WasThrownFromThrowStatement":false,"TargetSite":null,"Message":"Invalid class \"Win32_ComputerSystem\"","Data":{},"InnerException":null,"HelpLink":null,"Source":null,"HResult":-2146233087,"StackTrace":null},"TargetObject":null,"CategoryInfo":{"Category":9,"Activity":"Get-WmiObject","Reason":"ManagementException","TargetName":"","TargetType":""},"FullyQualifiedErrorId":"GetWMIManagementException,Microsoft.PowerShell.Commands.GetWmiObjectCommand","ErrorDetails":null,"InvocationInfo":{"MyCommand":{"Definition":"\r\nGet-WmiObject [-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject -Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n","OutputType":null,"Name":"Get-WmiObject","CommandType":8,"Source":"","Version":null,"Visibility":0,"ModuleName":"","Module":null,"RemotingCapability":1,"Parameters":null,"ParameterSets":null},"BoundParameters":{},"UnboundArguments":[],"ScriptLineNumber":1,"OffsetInLine":493,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","Statement":"gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:493\n+ … stance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (I …\n+               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":"","InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":1,"DisplayScriptPosition":null},"ScriptStackTrace":"at <ScriptBlock>, <No file>: line 1","PipelineIterationInfo":[0,0]},{"Exception":{"SerializedRemoteException":{"ErrorInformation":null,"ErrorCode":"Failed","Message":"Invalid class \"Win32_OperatingSystem\"","Data":{},"InnerException":null,"TargetSite":null,"StackTrace":null,"HelpLink":null,"Source":null,"HResult":-2146233087},"SerializedRemoteInvocationInfo":{"MyCommand":{"Namespace":"Microsoft.PowerShell.Management","HelpUri":"https://go.microsoft.com/fwlink/?LinkID=113337","DLL":"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\Microsoft.PowerShell.Commands.Management\\v4.0_3.0.0.0__31bf3856ad364e35\\Microsoft.PowerShell.Commands.Management.dll","Verb":"Get","Noun":"WmiObject","HelpFile":"Microsoft.PowerShell.Commands.Management.dll-Help.xml","PSSnapIn":"Microsoft.PowerShell.Management","Version":{"Major":3,"Minor":0,"Build":0,"Revision":0,"MajorRevision":0,"MinorRevision":0},"ImplementingType":"Microsoft.PowerShell.Commands.GetWmiObjectCommand","Definition":"\r\nGet-WmiObject [-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject -Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n","DefaultParameterSet":"query","OutputType":[],"Options":"ReadOnly","Name":"Get-WmiObject","CommandType":"Cmdlet","Source":"Microsoft.PowerShell.Management","Visibility":"Public","ModuleName":"Microsoft.PowerShell.Management","Module":null,"RemotingCapability":"OwnedByCommand","Parameters":{"Query":"System.Management.Automation.ParameterMetadata","Locale":"System.Management.Automation.ParameterMetadata","ErrorAction":"System.Management.Automation.ParameterMetadata","Impersonation":"System.Management.Automation.ParameterMetadata","EnableAllPrivileges":"System.Management.Automation.ParameterMetadata","AsJob":"System.Management.Automation.ParameterMetadata","Debug":"System.Management.Automation.ParameterMetadata","Verbose":"System.Management.Automation.ParameterMetadata","WarningAction":"System.Management.Automation.ParameterMetadata","Class":"System.Management.Automation.ParameterMetadata","OutVariable":"System.Management.Automation.ParameterMetadata","List":"System.Management.Automation.ParameterMetadata","WarningVariable":"System.Management.Automation.ParameterMetadata","Credential":"System.Management.Automation.ParameterMetadata","InformationVariable":"System.Management.Automation.ParameterMetadata","ErrorVariable":"System.Management.Automation.ParameterMetadata","Authentication":"System.Management.Automation.ParameterMetadata","Recurse":"System.Management.Automation.ParameterMetadata","Amended":"System.Management.Automation.ParameterMetadata","Filter":"System.Management.Automation.ParameterMetadata","OutBuffer":"System.Management.Automation.ParameterMetadata","DirectRead":"System.Management.Automation.ParameterMetadata","Authority":"System.Management.Automation.ParameterMetadata","PipelineVariable":"System.Management.Automation.ParameterMetadata","ThrottleLimit":"System.Management.Automation.ParameterMetadata","ComputerName":"System.Management.Automation.ParameterMetadata","InformationAction":"System.Management.Automation.ParameterMetadata","Namespace":"System.Management.Automation.ParameterMetadata","Property":"System.Management.Automation.ParameterMetadata"},"ParameterSets":["[-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","[[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","-Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","[-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","[-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]"]},"BoundParameters":{},"UnboundArguments":[],"ScriptLineNumber":1,"OffsetInLine":1121,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:1121\r\n+ ... try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate ...\r\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":null,"InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":{"value":1,"Value":null},"DisplayScriptPosition":null},"ErrorRecord":{"Exception":{"SerializedRemoteException":{"ErrorInformation":null,"ErrorCode":"Failed","Message":"Invalid class \"Win32_OperatingSystem\"","Data":"System.Collections.Hashtable","InnerException":null,"TargetSite":null,"StackTrace":null,"HelpLink":null,"Source":null,"HResult":-2146233087},"SerializedRemoteInvocationInfo":{"MyCommand":"Get-WmiObject","BoundParameters":"System.Collections.Hashtable","UnboundArguments":"","ScriptLineNumber":1,"OffsetInLine":1121,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:1121\r\n+ ... try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate ...\r\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":null,"InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":{"value":1,"Value":null},"DisplayScriptPosition":null},"ErrorRecord":{"Exception":"System.Management.Automation.RemoteException: Invalid class \"Win32_OperatingSystem\"","TargetObject":null,"CategoryInfo":"InvalidType: (:) [Get-WmiObject], ManagementException","FullyQualifiedErrorId":"GetWMIManagementException,Microsoft.PowerShell.Commands.GetWmiObjectCommand","ErrorDetails":null,"InvocationInfo":"System.Management.Automation.InvocationInfo","ScriptStackTrace":"at <ScriptBlock>, <No file>: line 1","PipelineIterationInfo":"0 0"},"WasThrownFromThrowStatement":false,"TargetSite":null,"Message":"Invalid class \"Win32_OperatingSystem\"","Data":{},"InnerException":null,"HelpLink":null,"Source":null,"HResult":-2146233087,"StackTrace":null},"TargetObject":null,"CategoryInfo":{"Category":9,"Activity":"Get-WmiObject","Reason":"ManagementException","TargetName":"","TargetType":""},"FullyQualifiedErrorId":"GetWMIManagementException,Microsoft.PowerShell.Commands.GetWmiObjectCommand","ErrorDetails":null,"InvocationInfo":{"MyCommand":{"Definition":"\r\nGet-WmiObject [-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject -Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n","OutputType":null,"Name":"Get-WmiObject","CommandType":8,"Source":"","Version":null,"Visibility":0,"ModuleName":"","Module":null,"RemotingCapability":1,"Parameters":null,"ParameterSets":null},"BoundParameters":{},"UnboundArguments":[],"ScriptLineNumber":1,"OffsetInLine":1121,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","Statement":"gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:1121\n+ … try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate …\n+               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":"","InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":1,"DisplayScriptPosition":null},"ScriptStackTrace":"at <ScriptBlock>, <No file>: line 1","PipelineIterationInfo":[0,0]},"WasThrownFromThrowStatement":false,"TargetSite":null,"Message":"Invalid class \"Win32_OperatingSystem\"","Data":{},"InnerException":null,"HelpLink":null,"Source":null,"HResult":-2146233087,"StackTrace":null},"TargetObject":null,"CategoryInfo":{"Category":9,"Activity":"Get-WmiObject","Reason":"ManagementException","TargetName":"","TargetType":""},"FullyQualifiedErrorId":"GetWMIManagementException,Microsoft.PowerShell.Commands.GetWmiObjectCommand","ErrorDetails":null,"InvocationInfo":{"MyCommand":{"Definition":"\r\nGet-WmiObject [-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject -Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n","OutputType":null,"Name":"Get-WmiObject","CommandType":8,"Source":"","Version":null,"Visibility":0,"ModuleName":"","Module":null,"RemotingCapability":1,"Parameters":null,"ParameterSets":null},"BoundParameters":{},"UnboundArguments":[],"ScriptLineNumber":1,"OffsetInLine":1121,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","Statement":"gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:1121\n+ … try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate …\n+               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":"","InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":1,"DisplayScriptPosition":null},"ScriptStackTrace":"at <ScriptBlock>, <No file>: line 1","PipelineIterationInfo":[0,0]},{"Exception":{"SerializedRemoteException":{"ErrorInformation":null,"ErrorCode":"Failed","Message":"Invalid class \"Win32_SystemEnclosure\"","Data":{},"InnerException":null,"TargetSite":null,"StackTrace":null,"HelpLink":null,"Source":null,"HResult":-2146233087},"SerializedRemoteInvocationInfo":{"MyCommand":{"Namespace":"Microsoft.PowerShell.Management","HelpUri":"https://go.microsoft.com/fwlink/?LinkID=113337","DLL":"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\Microsoft.PowerShell.Commands.Management\\v4.0_3.0.0.0__31bf3856ad364e35\\Microsoft.PowerShell.Commands.Management.dll","Verb":"Get","Noun":"WmiObject","HelpFile":"Microsoft.PowerShell.Commands.Management.dll-Help.xml","PSSnapIn":"Microsoft.PowerShell.Management","Version":{"Major":3,"Minor":0,"Build":0,"Revision":0,"MajorRevision":0,"MinorRevision":0},"ImplementingType":"Microsoft.PowerShell.Commands.GetWmiObjectCommand","Definition":"\r\nGet-WmiObject [-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject -Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n","DefaultParameterSet":"query","OutputType":[],"Options":"ReadOnly","Name":"Get-WmiObject","CommandType":"Cmdlet","Source":"Microsoft.PowerShell.Management","Visibility":"Public","ModuleName":"Microsoft.PowerShell.Management","Module":null,"RemotingCapability":"OwnedByCommand","Parameters":{"Query":"System.Management.Automation.ParameterMetadata","Locale":"System.Management.Automation.ParameterMetadata","ErrorAction":"System.Management.Automation.ParameterMetadata","Impersonation":"System.Management.Automation.ParameterMetadata","EnableAllPrivileges":"System.Management.Automation.ParameterMetadata","AsJob":"System.Management.Automation.ParameterMetadata","Debug":"System.Management.Automation.ParameterMetadata","Verbose":"System.Management.Automation.ParameterMetadata","WarningAction":"System.Management.Automation.ParameterMetadata","Class":"System.Management.Automation.ParameterMetadata","OutVariable":"System.Management.Automation.ParameterMetadata","List":"System.Management.Automation.ParameterMetadata","WarningVariable":"System.Management.Automation.ParameterMetadata","Credential":"System.Management.Automation.ParameterMetadata","InformationVariable":"System.Management.Automation.ParameterMetadata","ErrorVariable":"System.Management.Automation.ParameterMetadata","Authentication":"System.Management.Automation.ParameterMetadata","Recurse":"System.Management.Automation.ParameterMetadata","Amended":"System.Management.Automation.ParameterMetadata","Filter":"System.Management.Automation.ParameterMetadata","OutBuffer":"System.Management.Automation.ParameterMetadata","DirectRead":"System.Management.Automation.ParameterMetadata","Authority":"System.Management.Automation.ParameterMetadata","PipelineVariable":"System.Management.Automation.ParameterMetadata","ThrottleLimit":"System.Management.Automation.ParameterMetadata","ComputerName":"System.Management.Automation.ParameterMetadata","InformationAction":"System.Management.Automation.ParameterMetadata","Namespace":"System.Management.Automation.ParameterMetadata","Property":"System.Management.Automation.ParameterMetadata"},"ParameterSets":["[-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","[[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","-Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","[-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","[-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]"]},"BoundParameters":{},"UnboundArguments":[],"ScriptLineNumber":1,"OffsetInLine":1212,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:1212\r\n+ ... assisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach ...\r\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":null,"InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":{"value":1,"Value":null},"DisplayScriptPosition":null},"ErrorRecord":{"Exception":{"SerializedRemoteException":{"ErrorInformation":null,"ErrorCode":"Failed","Message":"Invalid class \"Win32_SystemEnclosure\"","Data":"System.Collections.Hashtable","InnerException":null,"TargetSite":null,"StackTrace":null,"HelpLink":null,"Source":null,"HResult":-2146233087},"SerializedRemoteInvocationInfo":{"MyCommand":"Get-WmiObject","BoundParameters":"System.Collections.Hashtable","UnboundArguments":"","ScriptLineNumber":1,"OffsetInLine":1212,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:1212\r\n+ ... assisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach ...\r\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":null,"InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":{"value":1,"Value":null},"DisplayScriptPosition":null},"ErrorRecord":{"Exception":"System.Management.Automation.RemoteException: Invalid class \"Win32_SystemEnclosure\"","TargetObject":null,"CategoryInfo":"InvalidType: (:) [Get-WmiObject], ManagementException","FullyQualifiedErrorId":"GetWMIManagementException,Microsoft.PowerShell.Commands.GetWmiObjectCommand","ErrorDetails":null,"InvocationInfo":"System.Management.Automation.InvocationInfo","ScriptStackTrace":"at <ScriptBlock>, <No file>: line 1","PipelineIterationInfo":"0 0 0"},"WasThrownFromThrowStatement":false,"TargetSite":null,"Message":"Invalid class \"Win32_SystemEnclosure\"","Data":{},"InnerException":null,"HelpLink":null,"Source":null,"HResult":-2146233087,"StackTrace":null},"TargetObject":null,"CategoryInfo":{"Category":9,"Activity":"Get-WmiObject","Reason":"ManagementException","TargetName":"","TargetType":""},"FullyQualifiedErrorId":"GetWMIManagementException,Microsoft.PowerShell.Commands.GetWmiObjectCommand","ErrorDetails":null,"InvocationInfo":{"MyCommand":{"Definition":"\r\nGet-WmiObject [-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject -Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n","OutputType":null,"Name":"Get-WmiObject","CommandType":8,"Source":"","Version":null,"Visibility":0,"ModuleName":"","Module":null,"RemotingCapability":1,"Parameters":null,"ParameterSets":null},"BoundParameters":{},"UnboundArguments":[],"ScriptLineNumber":1,"OffsetInLine":1212,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","Statement":"gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:1212\n+ … assisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach …\n+               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":"","InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":1,"DisplayScriptPosition":null},"ScriptStackTrace":"at <ScriptBlock>, <No file>: line 1","PipelineIterationInfo":[0,0,0]},"WasThrownFromThrowStatement":false,"TargetSite":null,"Message":"Invalid class \"Win32_SystemEnclosure\"","Data":{},"InnerException":null,"HelpLink":null,"Source":null,"HResult":-2146233087,"StackTrace":null},"TargetObject":null,"CategoryInfo":{"Category":9,"Activity":"Get-WmiObject","Reason":"ManagementException","TargetName":"","TargetType":""},"FullyQualifiedErrorId":"GetWMIManagementException,Microsoft.PowerShell.Commands.GetWmiObjectCommand","ErrorDetails":null,"InvocationInfo":{"MyCommand":{"Definition":"\r\nGet-WmiObject [-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject -Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n","OutputType":null,"Name":"Get-WmiObject","CommandType":8,"Source":"","Version":null,"Visibility":0,"ModuleName":"","Module":null,"RemotingCapability":1,"Parameters":null,"ParameterSets":null},"BoundParameters":{},"UnboundArguments":[],"ScriptLineNumber":1,"OffsetInLine":1212,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","Statement":"gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:1212\n+ … assisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach …\n+               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":"","InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":1,"DisplayScriptPosition":null},"ScriptStackTrace":"at <ScriptBlock>, <No file>: line 1","PipelineIterationInfo":[0,0,0]},{"Exception":{"SerializedRemoteException":{"ErrorInformation":null,"ErrorCode":"Failed","Message":"Invalid class \"Win32_OperatingSystem\"","Data":{},"InnerException":null,"TargetSite":null,"StackTrace":null,"HelpLink":null,"Source":null,"HResult":-2146233087},"SerializedRemoteInvocationInfo":{"MyCommand":{"Namespace":"Microsoft.PowerShell.Management","HelpUri":"https://go.microsoft.com/fwlink/?LinkID=113337","DLL":"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\Microsoft.PowerShell.Commands.Management\\v4.0_3.0.0.0__31bf3856ad364e35\\Microsoft.PowerShell.Commands.Management.dll","Verb":"Get","Noun":"WmiObject","HelpFile":"Microsoft.PowerShell.Commands.Management.dll-Help.xml","PSSnapIn":"Microsoft.PowerShell.Management","Version":{"Major":3,"Minor":0,"Build":0,"Revision":0,"MajorRevision":0,"MinorRevision":0},"ImplementingType":"Microsoft.PowerShell.Commands.GetWmiObjectCommand","Definition":"\r\nGet-WmiObject [-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject -Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n","DefaultParameterSet":"query","OutputType":[],"Options":"ReadOnly","Name":"Get-WmiObject","CommandType":"Cmdlet","Source":"Microsoft.PowerShell.Management","Visibility":"Public","ModuleName":"Microsoft.PowerShell.Management","Module":null,"RemotingCapability":"OwnedByCommand","Parameters":{"Query":"System.Management.Automation.ParameterMetadata","Locale":"System.Management.Automation.ParameterMetadata","ErrorAction":"System.Management.Automation.ParameterMetadata","Impersonation":"System.Management.Automation.ParameterMetadata","EnableAllPrivileges":"System.Management.Automation.ParameterMetadata","AsJob":"System.Management.Automation.ParameterMetadata","Debug":"System.Management.Automation.ParameterMetadata","Verbose":"System.Management.Automation.ParameterMetadata","WarningAction":"System.Management.Automation.ParameterMetadata","Class":"System.Management.Automation.ParameterMetadata","OutVariable":"System.Management.Automation.ParameterMetadata","List":"System.Management.Automation.ParameterMetadata","WarningVariable":"System.Management.Automation.ParameterMetadata","Credential":"System.Management.Automation.ParameterMetadata","InformationVariable":"System.Management.Automation.ParameterMetadata","ErrorVariable":"System.Management.Automation.ParameterMetadata","Authentication":"System.Management.Automation.ParameterMetadata","Recurse":"System.Management.Automation.ParameterMetadata","Amended":"System.Management.Automation.ParameterMetadata","Filter":"System.Management.Automation.ParameterMetadata","OutBuffer":"System.Management.Automation.ParameterMetadata","DirectRead":"System.Management.Automation.ParameterMetadata","Authority":"System.Management.Automation.ParameterMetadata","PipelineVariable":"System.Management.Automation.ParameterMetadata","ThrottleLimit":"System.Management.Automation.ParameterMetadata","ComputerName":"System.Management.Automation.ParameterMetadata","InformationAction":"System.Management.Automation.ParameterMetadata","Namespace":"System.Management.Automation.ParameterMetadata","Property":"System.Management.Automation.ParameterMetadata"},"ParameterSets":["[-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","[[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","-Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","[-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]","[-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]"]},"BoundParameters":{},"UnboundArguments":[],"ScriptLineNumber":1,"OffsetInLine":1362,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:1362\r\n+ ... lDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | selec ...\r\n+                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":null,"InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":1,"DisplayScriptPosition":null},"ErrorRecord":{"Exception":{"SerializedRemoteException":{"ErrorInformation":null,"ErrorCode":"Failed","Message":"Invalid class \"Win32_OperatingSystem\"","Data":"System.Collections.Hashtable","InnerException":null,"TargetSite":null,"StackTrace":null,"HelpLink":null,"Source":null,"HResult":-2146233087},"SerializedRemoteInvocationInfo":{"MyCommand":"Get-WmiObject","BoundParameters":"System.Collections.Hashtable","UnboundArguments":"","ScriptLineNumber":1,"OffsetInLine":1362,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:1362\r\n+ ... lDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | selec ...\r\n+                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":null,"InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":1,"DisplayScriptPosition":null},"ErrorRecord":{"Exception":"System.Management.Automation.RemoteException: Invalid class \"Win32_OperatingSystem\"","TargetObject":null,"CategoryInfo":"InvalidType: (:) [Get-WmiObject], ManagementException","FullyQualifiedErrorId":"GetWMIManagementException,Microsoft.PowerShell.Commands.GetWmiObjectCommand","ErrorDetails":null,"InvocationInfo":"System.Management.Automation.InvocationInfo","ScriptStackTrace":"at <ScriptBlock>, <No file>: line 1","PipelineIterationInfo":"0 0 0"},"WasThrownFromThrowStatement":false,"TargetSite":null,"Message":"Invalid class \"Win32_OperatingSystem\"","Data":{},"InnerException":null,"HelpLink":null,"Source":null,"HResult":-2146233087,"StackTrace":null},"TargetObject":null,"CategoryInfo":{"Category":9,"Activity":"Get-WmiObject","Reason":"ManagementException","TargetName":"","TargetType":""},"FullyQualifiedErrorId":"GetWMIManagementException,Microsoft.PowerShell.Commands.GetWmiObjectCommand","ErrorDetails":null,"InvocationInfo":{"MyCommand":{"Definition":"\r\nGet-WmiObject [-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject -Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n","OutputType":null,"Name":"Get-WmiObject","CommandType":8,"Source":"","Version":null,"Visibility":0,"ModuleName":"","Module":null,"RemotingCapability":1,"Parameters":null,"ParameterSets":null},"BoundParameters":{},"UnboundArguments":[],"ScriptLineNumber":1,"OffsetInLine":1362,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","Statement":"gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:1362\n+ … ToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallD …\n+               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":"","InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":1,"DisplayScriptPosition":null},"ScriptStackTrace":"at <ScriptBlock>, <No file>: line 1","PipelineIterationInfo":[0,0,0]},"WasThrownFromThrowStatement":false,"TargetSite":null,"Message":"Invalid class \"Win32_OperatingSystem\"","Data":{},"InnerException":null,"HelpLink":null,"Source":null,"HResult":-2146233087,"StackTrace":null},"TargetObject":null,"CategoryInfo":{"Category":9,"Activity":"Get-WmiObject","Reason":"ManagementException","TargetName":"","TargetType":""},"FullyQualifiedErrorId":"GetWMIManagementException,Microsoft.PowerShell.Commands.GetWmiObjectCommand","ErrorDetails":null,"InvocationInfo":{"MyCommand":{"Definition":"\r\nGet-WmiObject [-Class] <string> [[-Property] <string[]>] [-Filter <string>] [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [[-Class] <string>] [-Recurse] [-Amended] [-List] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject -Query <string> [-Amended] [-DirectRead] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n\r\nGet-WmiObject [-Amended] [-AsJob] [-Impersonation <ImpersonationLevel>] [-Authentication <AuthenticationLevel>] [-Locale <string>] [-EnableAllPrivileges] [-Authority <string>] [-Credential <pscredential>] [-ThrottleLimit <int>] [-ComputerName <string[]>] [-Namespace <string>] [<CommonParameters>]\r\n","OutputType":null,"Name":"Get-WmiObject","CommandType":8,"Source":"","Version":null,"Visibility":0,"ModuleName":"","Module":null,"RemotingCapability":1,"Parameters":null,"ParameterSets":null},"BoundParameters":{},"UnboundArguments":[],"ScriptLineNumber":1,"OffsetInLine":1362,"HistoryId":1,"ScriptName":"","Line":"function IsGuid{param([string]$PossibleGuid)try{$Guid=New-Object \"Guid\" -ArgumentList $PossibleGuid;return $true}catch{return $false}};function Get-AzureTenantId{$RegPath=\"HKLM:/SYSTEM/CurrentControlSet/Control/CloudDomainJoin/JoinInfo\";if((Test-Path $RegPath)){$subKey=Get-Item -Path $RegPath;$subKey.GetSubKeyNames()|% {$subKey.OpenSubKey($_).GetValue(\"TenantId\")}}else{return $null}};if(!(Get-Command \"gwmi\" -ErrorAction SilentlyContinue)){Set-Alias -Name gwmi -Value Get-CimInstance};$CS=gwmi Win32_ComputerSystem;function Is-Sandbox{return ( (IsGuid $CS.DNSHostName) -and $CS.DNSHostName.Substring(0, 15) -like $CS.Name -and $CS.Manufacturer -eq \"Microsoft Corporation\" -and $CS.Model -eq \"Virtual Machine\")};$Domain=\"\";if($CS.Domain){$Domain=$CS.Domain};$AzureTenantId=Get-AzureTenantId;$InstallDate=$null;$IsSandbox=Is-Sandbox -erroraction 'silentlycontinue';if($null-eq$isSandbox){$isSandbox=$false};$MachineID=Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\SQMClient' -ErrorAction SilentlyContinue -Name MachineID|ForEach-Object {[string][System.Guid]$_.MachineID};if($null-eq$machineID){$machineID=''};try{$OSInfo=gwmi Win32_OperatingSystem -Property Caption, InstallDate;$ChassisTypes=@();$ChassisTypes+=gwmi Win32_SystemEnclosure -Property ChassisTypes|ForEach-Object {$_.ChassisTypes};$Caption=$OSInfo.Caption;$installDate=([WMI]'').ConvertToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","Statement":"gwmi Win32_OperatingSystem | select InstallDate).InstallDate)}catch{Write-Warning \"Error $_\"};$DeviceId=Get-ItemProperty 'HKLM:\\SOFTWARE\\ImmenseNetworks\\ImmyBot' -ErrorAction SilentlyContinue -Name ImmyBotDeviceId|ForEach-Object {$_.ImmyBotDeviceId};if(!$DeviceId){$DeviceId=Get-CimInstance -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};if(!$DeviceId){$DeviceId=Get-WmiObject -ErrorAction SilentlyContinue Win32_ComputerSystemProduct -Property UUID|ForEach-Object {$_.UUID}};New-Object PSObject -Property @{\n","PositionMessage":"At line:1 char:1362\n+ … ToDateTime((gwmi Win32_OperatingSystem | select InstallDate).InstallD …\n+               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~","PSScriptRoot":"","PSCommandPath":"","InvocationName":"gwmi","PipelineLength":0,"PipelinePosition":0,"ExpectingInput":false,"CommandOrigin":1,"DisplayScriptPosition":null},"ScriptStackTrace":"at <ScriptBlock>, <No file>: line 1","PipelineIterationInfo":[0,0,0]}]'
07/18/25 2:03:03pm CDT - Finished identification for DESKTOP-A4GQRGB